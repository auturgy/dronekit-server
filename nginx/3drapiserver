# You may add here your
# server {
#	...
# }
# statements for each of your virtual hosts to this file

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

	client_max_body_size 256M;

	#root /usr/share/nginx/html;
	#index index.html index.htm;

 	# kevinh - needed to support websockets
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # kevinh - include real IP addr of client
	proxy_set_header        X-Real-IP       $remote_addr;
	proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;

server {
	server_name api.3drobotics.com;

	listen 443 default_server;
	ssl on;
	ssl_certificate /home/ubuntu/certs/api_3drobotics_com.crt;
	ssl_certificate_key /home/ubuntu/certs/api_3drobotics_com.key;

	# Disable BEAST SSL attack
	#ssl_ciphers RC4:HIGH:!aNULL:!MD5;
	ssl_prefer_server_ciphers on;

	# Turn off SSL v2/v3 - for more security
	# Per https://wiki.mozilla.org/Security/Server_Side_TLS#Nginx
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        #ssl_protocols  SSLv3 TLSv1;
        ssl_ciphers     ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:RC4:!3DES:!MD5:!PSK;
    	ssl_session_cache shared:SSL:50m;
    	# OCSP Stapling ---
    	# fetch OCSP records from URL in ssl_certificate and cache them
    	ssl_stapling on;
    	ssl_stapling_verify on;

	location /api {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		#try_files $uri $uri/ =404;
		# Uncomment to enable naxsi on this location
		# include /etc/nginx/naxsi.rules

		# kevinh - needed to make event streams work http://stackoverflow.com/questions/13672743/eventsource-server-sent-events-through-nginx
		chunked_transfer_encoding on; # kevinh - was off, hopefuly  on works as well
		proxy_buffering off;
		proxy_cache off;

	        proxy_pass http://127.0.0.1:8080;
	}

	location /swagger-ui {
		proxy_pass http://127.0.0.1:8080;
	}

	# For Auth0 use
	location /auth0callback {
		proxy_pass http://127.0.0.1:8080;
	}
}

# copy-paste (FIXME - figure out how to include) to also answer at droneshare
server {
	server_name api.droneshare.com;

	listen 443;
	ssl on;
	ssl_certificate /home/ubuntu/certs/api_droneshare_com.crt;
	ssl_certificate_key /home/ubuntu/certs/api_droneshare_com.key;

	# Disable BEAST SSL attack
	#ssl_ciphers RC4:HIGH:!aNULL:!MD5;
	ssl_prefer_server_ciphers on;

	# Turn off SSL v2/v3 - for more security
	# Per https://wiki.mozilla.org/Security/Server_Side_TLS#Nginx
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        #ssl_protocols  SSLv3 TLSv1;
        ssl_ciphers     ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:RC4:!3DES:!MD5:!PSK;
    	ssl_session_cache shared:SSL:50m;
    	# OCSP Stapling ---
    	# fetch OCSP records from URL in ssl_certificate and cache them
    	ssl_stapling on;
    	ssl_stapling_verify on;

	location /api {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		#try_files $uri $uri/ =404;
		# Uncomment to enable naxsi on this location
		# include /etc/nginx/naxsi.rules

		# kevinh - needed to make event streams work http://stackoverflow.com/questions/13672743/eventsource-server-sent-events-through-nginx
		chunked_transfer_encoding on; # kevinh - was off, hopefuly  on works as well
		proxy_buffering off;
		proxy_cache off;

	        proxy_pass http://127.0.0.1:8080;
	}
}

server {
	server_name api.3drobotics.com api.droneshare.com;

	listen 80 default_server;
	listen [::]:80 default_server ipv6only=on;

	# For any other access forward them to droneshare
	location / {
		return 301 http://www.droneshare.com;
	}

	location /api {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		#try_files $uri $uri/ =404;
		# Uncomment to enable naxsi on this location
		# include /etc/nginx/naxsi.rules

		# kevinh - needed to make event streams work http://stackoverflow.com/questions/13672743/eventsource-server-sent-events-through-nginx
		chunked_transfer_encoding on; # kevinh - was off, hopefuly  on works as well
		proxy_buffering off;
		proxy_cache off;

	        proxy_pass http://127.0.0.1:8080;
	}

	location /swagger-ui {
		proxy_pass http://127.0.0.1:8080;
	}

	# For Auth0 use
	location /auth0callback {
		proxy_pass http://127.0.0.1:8080;
	}

	# Only for nginx-naxsi used with nginx-naxsi-ui : process denied requests
	#location /RequestDenied {
	#	proxy_pass http://127.0.0.1:8080;    
	#}

	#error_page 404 /404.html;

	# redirect server error pages to the static page /50x.html
	#
	#error_page 500 502 503 504 /50x.html;
	#location = /50x.html {
	#	root /usr/share/nginx/html;
	#}

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	#location ~ \.php$ {
	#	fastcgi_split_path_info ^(.+\.php)(/.+)$;
	#	# NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
	#
	#	# With php5-cgi alone:
	#	fastcgi_pass 127.0.0.1:9000;
	#	# With php5-fpm:
	#	fastcgi_pass unix:/var/run/php5-fpm.sock;
	#	fastcgi_index index.php;
	#	include fastcgi_params;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}

# FIXME add redirect and setup ssl per http://www.digicert.com/ssl-certificate-installation-nginx.htm

# another virtual host using mix of IP-, name-, and port-based configuration
#
#server {
#	listen 8000;
#	listen somename:8080;
#	server_name somename alias another.alias;
#	root html;
#	index index.html index.htm;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}


# HTTPS server
#
#server {
#	listen 443;
#	server_name localhost;
#
#	root html;
#	index index.html index.htm;
#
#	ssl on;
#	ssl_certificate cert.pem;
#	ssl_certificate_key cert.key;
#
#	ssl_session_timeout 5m;
#
#	ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
#	ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
#	ssl_prefer_server_ciphers on;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
